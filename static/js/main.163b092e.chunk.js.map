{"version":3,"sources":["images/amazon-logo.png","components/header/Logo.js","cart-context.js","components/header/index.js","components/general/CurrencyFormat.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","CartStateContext","React","createContext","CartDispatchContext","cartReducer","state","action","type","CartProvider","children","useReducer","products","totalQuantity","totalPrice","dispatch","Provider","value","Header","mdiCurrencyInr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"snBAAe,I,MCWAA,I,oCCPTC,EAAmBC,IAAMC,gBACzBC,EAAsBF,IAAMC,gBAElC,SAASE,EAAYC,EAAOC,GAGtB,OAFIA,EAAOC,KAEJF,EAKb,SAASG,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACRR,IAAMS,WAAWN,EAAa,CACtDO,SAAU,GACVC,cAAe,EACfC,WAAY,IAJoB,mBAC3BR,EAD2B,KACpBS,EADoB,KAMlC,OACE,cAACd,EAAiBe,SAAlB,CAA2BC,MAAOX,EAAlC,SACE,cAACF,EAAoBY,SAArB,CAA8BC,MAAOF,EAArC,SACGL,M,wBCEMQ,I,kBClBRC,I,wFCMQC,MAJf,WACE,MAAO,aCCMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,UACE,cAAC,EAAD,QAGJwB,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.163b092e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/amazon-logo.1c9be0b2.png\";","import React from 'react';\n\nimport BrandLogo from 'images/amazon-logo.png';\nimport { Link } from 'react-router-dom';\n\nimport './Logo.scss';\n\nfunction Logo({ country = 'in' }) {\n  return null;\n}\n\nexport default Logo;\n","import React from 'react';\n\nimport { calculatePriceDetails } from 'utils.js/product';\n\nconst CartStateContext = React.createContext();\nconst CartDispatchContext = React.createContext();\n\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction CartProvider({ children }) {\n  const [state, dispatch] = React.useReducer(cartReducer, {\n    products: {},\n    totalQuantity: 0,\n    totalPrice: 0,\n  });\n  return (\n    <CartStateContext.Provider value={state}>\n      <CartDispatchContext.Provider value={dispatch}>\n        {children}\n      </CartDispatchContext.Provider>\n    </CartStateContext.Provider>\n  );\n}\n\nfunction useCartState() {\n  const context = React.useContext(CartStateContext);\n  if (context === undefined) {\n    throw new Error('useCountState must be used within a CountProvider');\n  }\n  return context;\n}\n\nfunction useCartDispatch() {\n  const context = React.useContext(CartDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCountDispatch must be used within a CountProvider');\n  }\n  return context;\n}\n\nexport { CartProvider, useCartState, useCartDispatch };\n","import React from 'react';\n\nimport './index.scss';\n\nimport DeliveryLocation from './DeliveryLocation';\nimport Logo from './Logo';\nimport Search from './Search';\nimport Account from './Account';\nimport Cart from './Cart';\nimport Orders from './Orders';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <Logo />\n        <DeliveryLocation />\n        <Search />\n        <Account />\n        <Orders />\n        <Cart />\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Icon from '@mdi/react';\nimport { mdiCurrencyInr } from '@mdi/js';\nimport classNames from 'classnames';\n\nimport './CurrencyFormat.scss';\n\nconst currenyCodeIconMap = {\n  INR: mdiCurrencyInr,\n};\n\nconst currencyCodeLocaleMap = {\n  INR: 'en-IN',\n};\n\nfunction CurrencyFormat({}) {\n  return null;\n}\n\nexport default CurrencyFormat;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Header from './components/header';\nimport CartPage from './pages/cart';\nimport ProductPage from './pages/product';\nimport LoginPage from './pages/login';\nimport HomePage from './pages/home';\n\nimport './App.scss';\n\nfunction App() {\n  return 'Hello App';\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CartProvider } from './cart-context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CartProvider>\n      <App />\n    </CartProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}